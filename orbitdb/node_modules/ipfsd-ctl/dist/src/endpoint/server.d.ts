export = Server;
/**
 * Creates an instance of Server.
 *
 * @class
 */
declare class Server {
    /**
     * @class
     * @param {Object} options
     * @param {number} [options.port=43134]
     * @param {string} [options.host='localhost']
     * @param {Function} createFactory
     */
    constructor(options: {
        port?: number | undefined;
        host?: string | undefined;
    } | undefined, createFactory: Function);
    options: {
        port?: number | undefined;
        host?: string | undefined;
    };
    server: Hapi.Server | null;
    port: number;
    host: string;
    createFactory: Function;
    /**
     * Start the server
     *
     * @param {number} port
     * @returns {Promise<Server>}
     */
    start(port?: number): Promise<Server>;
    /**
     * Stop the server
     *
     * @param {object} [options]
     * @param {number} options.timeout
     * @returns {Promise<void>}
     */
    stop(options?: {
        timeout: number;
    } | undefined): Promise<void>;
}
import Hapi = require("@hapi/hapi");
//# sourceMappingURL=server.d.ts.map